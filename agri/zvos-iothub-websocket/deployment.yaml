apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-agri-zvos-iothub-websocket
  name: zvos-iothub-websocket
  namespace: agri
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-agri-zvos-iothub-websocket
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: 2019-07-01T01:25:02Z
        field.cattle.io/ports: '[[{"containerPort":9366,"dnsName":"zvos-iothub-websocket","kind":"ClusterIP","name":"9366tcp02","protocol":"TCP","sourcePort":0},{"containerPort":9366,"dnsName":"zvos-iothub-websocket-nodeport","kind":"NodePort","name":"9366tcp328001","protocol":"TCP","sourcePort":32800}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-agri-zvos-iothub-websocket
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - zlrancher008
                - zlrancher012
                - zlrancher013
                - zlrancher014
      containers:
      - command:
        - java
        - -Djava.security.egd=file:/dev/./urandom
        - -jar
        - -Xms256m
        - -Xmx512m
        - /app/zvos-iothub-websocket-srv-1.0.1-SNAPSHOT.jar
        - --eureka.client.serviceUrl.defaultZone=http://${EK_URL}:8201/eureka/
        - --eureka.instance.prefer-ip-address=true
        - --spring.cloud.stream.kafka.binder.brokers=${KAFKA_URL}
        - --spring.cloud.stream.kafka.binder.zk-nodes=${ZK_URL}
        - --spring.redis.host=${REDIS_URL}
        env:
        - name: EK_URL
          valueFrom:
            configMapKeyRef:
              key: eurake-host
              name: host-config
              optional: false
        - name: KAFKA_URL
          valueFrom:
            configMapKeyRef:
              key: kafka-host
              name: host-config
              optional: false
        - name: ZK_URL
          valueFrom:
            configMapKeyRef:
              key: zk-host
              name: host-config
              optional: false
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              key: redis-host
              name: host-config
              optional: false
        - name: SW_AGENT_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
          valueFrom:
            configMapKeyRef:
              key: backend_service
              name: collector
        image: ${CICD_IMAGE}:${CICD_GIT_COMMIT}
        imagePullPolicy: IfNotPresent
        name: zvos-iothub-websocket
        ports:
        - containerPort: 9366
          name: 9366tcp02
          protocol: TCP
        - containerPort: 9366
          name: 9366tcp328001
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: zvos
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
